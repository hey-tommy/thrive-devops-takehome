name: Thrive DevOps App CI/CD

# Trigger on push to the main branch
on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

# Permissions needed for AWS OIDC authentication
permissions:
  id-token: write # Required to request the JWT ID token
  contents: read  # Required to check out the repository

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.tag }} # Output the Git SHA tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Placeholder for AWS Credentials ---
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Replace with your actual Role ARN
          role-to-assume: arn:aws:iam::329178086857:role/GitHubActions-ThriveDevOpsRole
          aws-region: us-east-1 # Your AWS region

      # --- Placeholder for ECR Login ---
      # --- Placeholder for Buildx Setup ---
      # --- Placeholder for Docker Build & Push ---

      - name: Set Image Tag Output
        id: set_tag
        run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Placeholder Build Step
        run: echo "Build steps using tag ${{ steps.set_tag.outputs.tag }} will go here..."

  deploy:
    name: Build and Deploy to EKS
    runs-on: ubuntu-latest
    needs: build # Depends on the build job completing successfully
    permissions:
      id-token: write # Required for AWS OIDC
      contents: read # Required to checkout the code

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::329178086857:role/GitHubActions-ThriveDevOpsRole
          aws-region: us-east-1 # Replace with your AWS region

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Define Image Tag and Repo
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=thrive-devops-app" >> $GITHUB_ENV # Match Terraform ECR repo name
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./app # Path to the Dockerfile directory
          push: true
          platforms: linux/amd64,linux/arm64 # Multi-arch build
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name thrive-devops-eks
          kubectl version --client

      - name: Update Kubernetes rollout manifest
        run: |
          sed -i "s|image:.*|image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}|g" k8s/rollouts/app-rollout.yaml
          echo "--- Updated k8s/rollouts/app-rollout.yaml --- "
          cat k8s/rollouts/app-rollout.yaml
          echo "--------------------------------------------"

      - name: Apply Kubernetes manifest
        run: |
          kubectl apply -f k8s/rollouts/app-rollout.yaml
          echo "Deployment initiated. Monitoring rollout status..."
          # Optional: Monitor rollout status (might time out in Actions)
          # kubectl argo rollouts status thrive-devops-app-rollout --watch=true --timeout=5m
